[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "financial-ts-forecasting"
version = "1.0.0"
description = "Financial Time Series Forecasting with Uncertainty Quantification"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Mohansree Vijayakumar", email = "mohansreesk14@gmail.com"}
]
keywords = [
    "financial",
    "time-series",
    "forecasting",
    "uncertainty-quantification",
    "deep-learning",
    "lstm",
    "transformer",
    "bayesian-neural-networks",
    "monte-carlo-dropout"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Office/Business :: Financial :: Investment",
]

dependencies = [
    "torch>=1.9.0",
    "numpy>=1.19.0",
    "pandas>=1.3.0",
    "scikit-learn>=0.24.0",
    "matplotlib>=3.3.0",
    "seaborn>=0.11.0",
    "yfinance>=0.1.63",
    "streamlit>=1.0.0",
    "optuna>=2.10.0",
    "pyro-ppl>=1.7.0",
    "pyyaml>=5.4.0",
    "tqdm>=4.62.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.2.0",
    "pytest-cov>=2.12.0",
    "black>=21.6b0",
    "flake8>=3.9.0",
    "mypy>=0.910",
    "isort>=5.9.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/financial-ts-forecasting"
Repository = "https://github.com/yourusername/financial-ts-forecasting"
Documentation = "https://github.com/yourusername/financial-ts-forecasting/blob/main/README.md"

[project.scripts]
financial-ts-train = "train:main"
financial-ts-evaluate = "evaluate:main"
financial-ts-backtest = "backtest:main"
financial-ts-app = "run_project:main"

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | results
  | experiments
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "--cov=src",
    "--cov-report=html",
    "--cov-report=term-missing",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "yfinance.*",
    "streamlit.*",
    "optuna.*",
    "pyro.*",
    "seaborn.*",
]
ignore_missing_imports = true

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "pass",
]
